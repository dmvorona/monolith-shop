deploy:
  monolith: true
  microservices: false

monolith:
  name: monolith-shop
  image:
    repository: dmytrovorona1nure/monolith-shop
    tag: latest
    pullPolicy: IfNotPresent
  service:
    port: 8080
  replicaCount: 1

microservices:
  product:
    enabled: true
    name: product-service
    image:
      repository: dmytrovorona1nure/products
      tag: latest
      pullPolicy: IfNotPresent
    service:
      port: 8081
    replicaCount: 1
  user:
    enabled: true
    name: user-service
    image:
      repository: dmytrovorona1nure/users
      tag: latest
      pullPolicy: IfNotPresent
    service:
      port: 8082
    replicaCount: 1
  cart:
    enabled: true
    name: cart-service
    image:
      repository: dmytrovorona1nure/carts
      tag: latest
      pullPolicy: IfNotPresent
    service:
      port: 8083
    replicaCount: 1
  order:
    enabled: true
    name: order-service
    image:
      repository: dmytrovorona1nure/orders
      tag: latest
      pullPolicy: IfNotPresent
    service:
      port: 8084
    replicaCount: 1

imagePullSecrets: []

serviceAccount:
  create: true
  automount: true
  annotations: {}
  name: ""

podAnnotations: {}
podLabels: {}

ingress:
  enabled: true
  className: ""
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /$2
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
  hosts:
    - host: shop.local
      paths:
        - path: /products(/|$)(.*)
          pathType: Prefix
          backend:
            service:
              name: product-service
              port:
                number: 8081
        - path: /users(/|$)(.*)
          pathType: Prefix
          backend:
            service:
              name: user-service
              port:
                number: 8082
        - path: /carts(/|$)(.*)
          pathType: Prefix
          backend:
            service:
              name: shop
              port:
                number: 8083
        - path: /orders(/|$)(.*)
          pathType: Prefix
          backend:
            service:
              name: shop
              port:
                number: 8084
  tls:
    - hosts:
        - shop.local
      secretName: shop-tls

resources: {}

livenessProbe:
  httpGet:
    path: /healthz
    port: http
readinessProbe:
  httpGet:
    path: /healthz
    port: http

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80

volumes: []

volumeMounts: []
